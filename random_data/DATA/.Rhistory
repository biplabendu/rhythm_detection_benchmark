library("EmpiricalBrownsMethod")
library(plyr)
species <- "drosophila"
tissue <- "head"
methods.list.tmp <- c("empJTK","RAIN","JTK","LS","ARS","meta2d" )
if (dir.exists("/scratch/cluster/monthly/dlaloum/")==TRUE){
main.dir <- "/scratch/cluster/monthly/dlaloum/Documents/workspace_sampled"
} else {
main.dir <- "~/Documents/workspace_sampled"
}
file.dir <- paste(paste(main.dir, "DATA", species, tissue, sep = "/"), "/", sep="")
if (dir.exists(file.dir)==FALSE){
stop("Directory/file doesn't exist. Maybe: mouse_RNAseq or mouse_microarray ???")
}
file.name <- paste(file.dir, tissue, ".txt", sep = "")
raw.data <- read.table(file.name, head=TRUE, check.names = FALSE, stringsAsFactors = FALSE)
methods.list.files.tmp <- paste(methods.list.tmp, ".txt", sep = "")
methods.list.files.tmp <- paste(file.dir, methods.list.files.tmp, sep = "")
methods.list.files <- NULL
methods.list <- NULL
not.existing.methods <- NULL
for (i in 1:length(methods.list.files.tmp)){
if (file.exists(methods.list.files.tmp[i])){
methods.list.files <- c(methods.list.files, methods.list.files.tmp[i])
methods.list <- c(methods.list, methods.list.tmp[i])
} else { not.existing.methods <- c(not.existing.methods, methods.list.tmp[i]) }
}
system(paste("echo pvaluePerGeneNormalization is working with :", paste(methods.list, collapse=' , ' ), sep=" "))
if (!is.null(not.existing.methods)){
system(paste("echo WARNING:", paste(not.existing.methods, collapse=' , ' ), "does not exist", sep=" "))
}
method <- NULL
method.normalized <- NULL
library("EmpiricalBrownsMethod")
library(plyr)
species <- "drosophila"
tissue <- "head"
methods.list.tmp <- c("empJTK","RAIN","JTK","LS","ARS","meta2d" )
if (dir.exists("/scratch/cluster/monthly/dlaloum/")==TRUE){
main.dir <- "/scratch/cluster/monthly/dlaloum/Documents/workspace_sampled"
} else {
main.dir <- "~/Documents/workspace_sampled"
}
file.dir <- paste(paste(main.dir, "DATA", species, tissue, sep = "/"), "/", sep="")
if (dir.exists(file.dir)==FALSE){
stop("Directory/file doesn't exist. Maybe: mouse_RNAseq or mouse_microarray ???")
}
file.name <- paste(file.dir, tissue, ".txt", sep = "")
raw.data <- read.table(file.name, head=TRUE, check.names = FALSE, stringsAsFactors = FALSE)
methods.list.files.tmp <- paste(methods.list.tmp, ".txt", sep = "")
methods.list.files.tmp <- paste(file.dir, methods.list.files.tmp, sep = "")
methods.list.files <- NULL
methods.list <- NULL
not.existing.methods <- NULL
length(methods.list.files.tmp)
i <- 1
file.exists(methods.list.files.tmp[i])
if (file.exists(methods.list.files.tmp[i])){
methods.list.files <- c(methods.list.files, methods.list.files.tmp[i])
methods.list <- c(methods.list, methods.list.tmp[i])
} else { not.existing.methods <- c(not.existing.methods, methods.list.tmp[i]) }
methods.list.files <- NULL
methods.list <- NULL
not.existing.methods <- NULL
for (i in 1:length(methods.list.files.tmp)){
if (file.exists(methods.list.files.tmp[i])){
methods.list.files <- c(methods.list.files, methods.list.files.tmp[i])
methods.list <- c(methods.list, methods.list.tmp[i])
} else { not.existing.methods <- c(not.existing.methods, methods.list.tmp[i]) }
}
system(paste("echo pvaluePerGeneNormalization is working with :", paste(methods.list, collapse=' , ' ), sep=" "))
if (!is.null(not.existing.methods)){
system(paste("echo WARNING:", paste(not.existing.methods, collapse=' , ' ), "does not exist", sep=" "))
}
method <- NULL
method.normalized <- NULL
i
method.result <- read.table(methods.list.files[i], head=TRUE, check.names = FALSE, stringsAsFactors = FALSE)
methods.list.files
method[[i]] <- read.table(methods.list.files[i], head=TRUE, check.names = FALSE, stringsAsFactors = FALSE)
method[[i]] <- method[[i]][,c("ID", "pvalue")]
length(unique(method.result$ID))!=length(method.result$ID)
View(method.result)
methods.list.files
methods.list.files[i]
if (dir.exists("/scratch/cluster/monthly/dlaloum/")==TRUE){
main.dir <- "/scratch/cluster/monthly/dlaloum/Documents/workspace_sampled"
} else {
main.dir <- "~/Documents/workspace_sampled"
}
library(readr)
devtools::install(paste(main.dir, "scripts/MetaCycle", sep = "/"))
library(MetaCycle)
tissue.file <- paste(tissue, ".txt", sep="")
file.dir <- paste(paste(main.dir, "DATA", species, tissue, sep = "/"), "/", sep="")
if (dir.exists(file.dir)==FALSE){
stop("Directory/file doesn't exist. Maybe: mouse_RNAseq or mouse_microarray ???")
}
system(paste("echo Running the file :", tissue.file, sep=" "))
file.name <- paste(file.dir, tissue.file, sep = "")
raw.dataset <- read.table(file.name, head=TRUE, check.names = FALSE, stringsAsFactors = FALSE)
time.points <- colnames(raw.dataset)[-1]
time.points <- parse_number(time.points)
metaCycle.output <- meta2d(infile=file.name, filestyle="txt",
outputFile=FALSE,
minper = 20, maxper = 28,
timepoints=time.points,
cycMethod=c("LS", "JTK", "ARS"), outRawData=FALSE,
raw.pVal=TRUE) # added new option to get raw p-values
meta <- metaCycle.output$meta
i <- 1
method <- NULL
method.normalized <- NULL
method.result <- read.table(methods.list.files[i], head=TRUE, check.names = FALSE, stringsAsFactors = FALSE)
if (grepl("ARS", do.call("paste",as.list(colnames(meta))))){
ARS <- meta[ , c(1, grep("ARS", colnames(meta)))]
colnames(ARS) <- c("ID", "pvalue", "BH.Q", "period", "phase", "amplitude")
}
if (grepl("JTK", do.call("paste",as.list(colnames(meta))))){
JTK <- meta[ , c(1, grep("JTK", colnames(meta)))]
colnames(JTK) <- c("ID", "pvalue", "BH.Q", "period", "phase", "amplitude")
}
if (grepl("LS", do.call("paste",as.list(colnames(meta))))){
LS <- meta[ , c(1, grep("LS", colnames(meta)))]
colnames(LS) <- c("ID", "pvalue", "BH.Q", "period", "phase", "amplitude")
}
if (grepl("meta2d", do.call("paste",as.list(colnames(meta))))){
meta2d <- meta[ , c(1, grep("meta2d", colnames(meta)))]
colnames(meta2d) <- c("ID", "pvalue", "BH.Q", "period", "phase", "amplitude")
}
View(meta2d)
View(meta)
colnames(meta)
meta2d <- meta[ , c(1, "meta2d_pvalue", "meta2d_BH.Q", "meta2d_period", "meta2d_phase", "meta2d_AMP")]
meta2d <- meta[ , c(1, c("meta2d_pvalue", "meta2d_BH.Q", "meta2d_period", "meta2d_phase", "meta2d_AMP"))]
meta2d <- meta[ , c("", "meta2d_pvalue", "meta2d_BH.Q", "meta2d_period", "meta2d_phase", "meta2d_AMP")]
meta2d <- meta[ , c("CycID", "meta2d_pvalue", "meta2d_BH.Q", "meta2d_period", "meta2d_phase", "meta2d_AMP")]
colnames(meta2d) <- c("ID", "pvalue", "BH.Q", "period", "phase", "amplitude")
?list.files
dir("../..", pattern = "^[a-lr]", full.names = TRUE, ignore.case = TRUE)
setwd("~/Documents/workspace_sampled/DATA/")
dir("", pattern = "^[a-lr]", full.names = TRUE, ignore.case = TRUE)
dir("", pattern = "empJTK", full.names = TRUE, ignore.case = TRUE)
setwd("~/Documents/workspace_sampled/")
dir("DATA", pattern = "empJTK", full.names = TRUE, ignore.case = TRUE)
dir("DATA/", pattern = "empJTK", full.names = TRUE, ignore.case = TRUE)
setwd("~/Documents/workspace_sampled/")
dir("DATA/", pattern = "empJTK", full.names = TRUE, ignore.case = TRUE)
dir(".", pattern = "empJTK", full.names = TRUE, ignore.case = TRUE)
list.files(pattern = "empJTK", recursive = TRUE)
setwd("~/Documents/workspace_sampled/DATA/")
list.files(pattern = "meta2d", recursive = TRUE)
meta2d.files <- list.files(pattern = "meta2d", recursive = TRUE)
meta2d.files
i <- 1
file.meta2d <- read.table(meta2d.files[i], head=TRUE, check.names = FALSE, stringsAsFactors = FALSE)
View(file.meta2d)
file.meta2d <- file.meta2d[, c(1:5,7)]
meta2d.files
paste(meta2d.files[i], sep = "")
file.meta2d <- read.table(meta2d.files[i], head=TRUE, check.names = FALSE, stringsAsFactors = FALSE)
file.meta2d <- file.meta2d[, c(1:5,7)]
colnames(file.meta2d) <- c("ID", "pvalue", "BH.Q", "period", "phase", "amplitude")
meta2d.files[i]
setwd("~/Documents/workspace_sampled/DATA/")
meta2d.files <- list.files(pattern = "meta2d", recursive = TRUE)
for (i in 1:length(meta2d.files)){
file.meta2d <- read.table(meta2d.files[i], head=TRUE, check.names = FALSE, stringsAsFactors = FALSE)
file.meta2d <- file.meta2d[, c(1:5,7)]
colnames(file.meta2d) <- c("ID", "pvalue", "BH.Q", "period", "phase", "amplitude")
write.table(file.meta2d, meta2d.files[i], row.names = F, quote = F, sep = "\t")
}
